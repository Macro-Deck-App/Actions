name: Fetch Version To Release
inputs:
  releaseType:
    required: true
outputs:
  version:
    description: "Next version from the API"
    value: ${{ steps.fetch_version.outputs.version }}
  isBeta:
    description: "Is it a beta version?"
    value: ${{ steps.fetch_version.outputs.isBeta }}

runs:
  using: "composite"
  steps:
    - shell: bash
      id: fetch_version
      run: |
          RELEASE_TYPE=${{ github.event.inputs.releaseType }}
          BASE_URL="https://update.api.macro-deck.app/versionname/next"

          case "${RELEASE_TYPE}" in
            "major")
              URL="${BASE_URL}/major"
              ;;
            "minor")
              URL="${BASE_URL}/minor"
              ;;
            "patch")
              URL="${BASE_URL}/patch"
              ;;
            "major_beta")
              URL="${BASE_URL}/major/beta"
              ;;
            "minor_beta")
              URL="${BASE_URL}/minor/beta"
              ;;
            *)
              echo "Invalid release type: ${RELEASE_TYPE}"
              exit 1
              ;;
          esac
          
          RESPONSE=$(curl -s $URL)

          VERSION_NAME=$(echo $RESPONSE | jq -r '.versionName')
          echo "version=${VERSION_NAME}" >> $GITHUB_OUTPUT

          IS_BETA=$(echo $RESPONSE | jq -r '.isBetaVersion')
          echo "isBeta=${IS_BETA}" >> $GITHUB_OUTPUT